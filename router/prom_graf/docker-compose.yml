version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.30.3
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    extra_hosts:
      - "dockerhost:192.168.40.1"


  # nodeexporter:
    # image: prom/node-exporter:v1.2.2
    # container_name: nodeexporter
    # volumes:
      # - /proc:/host/proc:ro
      # - /sys:/host/sys:ro
      # - /:/rootfs:ro
    # command:
      # - '--path.procfs=/host/proc'
      # - '--path.rootfs=/rootfs'
      # - '--path.sysfs=/host/sys'
      # - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      # - '--collector.network_route'
      # - '--collector.tcpstat'
    # restart: unless-stopped
    # expose:
      # - 9100
    # networks:
      # - monitor-net
    # labels:
      # org.label-schema.group: "monitoring"

  # cadvisor:
    # image: gcr.io/cadvisor/cadvisor:v0.42.0
    # container_name: cadvisor
    # privileged: true
    # devices:
      # - /dev/kmsg:/dev/kmsg
    # volumes:
      # - /:/rootfs:ro
      # - /var/run:/var/run:ro
      # - /sys:/sys:ro
      # - /var/lib/docker:/var/lib/docker:ro
    # restart: unless-stopped
    # expose:
      # - 8080
    # networks:
      # - monitor-net
    # labels:
      # org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:8.2.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  # pushgateway:
    # image: prom/pushgateway:v1.4.2
    # container_name: pushgateway
    # restart: unless-stopped
    # expose:
      # - 9091
    # networks:
      # - monitor-net
    # labels:
      # org.label-schema.group: "monitoring"

  caddy:
    image: caddy:2.3.0
    container_name: caddy
    ports:
      - "3000:3000"
      - "127.0.0.1:9090:9090"
      - "127.0.0.1:9093:9093"
      - "127.0.0.1:9091:9091"
    volumes:
      - ./caddy:/etc/caddy
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - ADMIN_PASSWORD_HASH=${ADMIN_PASSWORD_HASH:-JDJhJDE0JE91S1FrN0Z0VEsyWmhrQVpON1VzdHVLSDkyWHdsN0xNbEZYdnNIZm1pb2d1blg4Y09mL0ZP}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  netdata:
    image: netdata/netdata
    container_name: netdata
    restart: always
    ports:
      - 127.0.0.1:19999:19999
    networks:
      - monitor-net
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
